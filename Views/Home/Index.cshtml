@model MacroTracker.ViewModels.HomeIndexViewModel

@{
    ViewData["Title"] = "Dashboard";
    var today = DateTime.Now.Date;
}

<h2>Welcome, @(Model.UserProfile?.User?.UserName ?? "User")</h2> <!-- Checking if UserProfile or UserName is null before accessing it -->
<!-- Display the total calories consumed today -->
<div>
    <h4>
        Total Calories Consumed Today:
        @Model.UserFoodLogs.Sum(log => log.Calories)
    </h4>
</div>

<div>
    <h4>Your Daily Caloric Target: @Model.UserProfile.CalculateCalorieTarget()</h4>
    <h4>Your Macros:</h4>
    <ul>
        <li>Protein: @Model.UserProfile.ProteinTarget g</li>
        <li>Carbs: @Model.UserProfile.CarbTarget g</li>
        <li>Fats: @Model.UserProfile.FatTarget g</li>
        <li>Fiber: @Model.UserProfile.FiberTarget g</li>
        <li>Added Sugar: @Model.UserProfile.AddedSugarTarget g</li>
    </ul>
</div>

<!-- Add Food Log Form -->
<div>
    <h4>Add Food Log:</h4>
    <form asp-action="AddFoodLog" method="post">
        <label for="foodItemId">Food Item:</label>
        <select name="foodItemId" required>
            @foreach (var item in Model.AvailableFoodItems)
            {
                <option value="@item.FoodItemId">@item.Name</option>
            }
        </select>

        <label for="servingSize">Serving Size:</label>
        <input type="number" name="servingSize" step="0.1" required />

        <button type="submit">Add Food Log</button>
    </form>
</div>

@if (Model.UserFoodLogs.Any(log => log.LogDate.Date == today))
{
    <h4>Foods Logged Today:</h4>
    <table>
        <thead>
            <tr>
                <th>Food Item</th>
                <th>Calories</th>
                <th>Serving Size</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var log in Model.UserFoodLogs.Where(log => log.LogDate.Date == today))
            {
                <tr>
                    <td>@log.FoodItem.Name</td>
                    <td>@log.Calories</td>
                    <td>@log.ServingSize @log.FoodItem.ServingUnit</td>
                    <td>
                        <a asp-action="EditFoodLog" asp-controller="FoodLog" asp-route-id="@log.UserFoodLogId">Edit</a> |
                        <form asp-action="DeleteFoodLog" asp-controller="FoodLog" asp-route-id="@log.UserFoodLogId" method="post" style="display:inline;">
                            <button type="submit" onclick="return confirm('Are you sure you want to delete this food log?');">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h4>No foods logged today.</h4>
    <p>Add food to your meals:</p>
    <div>
        <h5>Breakfast</h5>
        <form asp-action="SearchFoodLog" asp-controller="FoodLog" method="get">
            <input type="hidden" name="meal" value="Breakfast" />
            <button type="submit">Search for Food</button>
        </form>
    </div>

    <div>
        <h5>Lunch</h5>
        <a asp-action="AddFoodLog" asp-controller="FoodLog" asp-route-meal="Lunch">Add Food</a>
    </div>
    <div>
        <h5>Dinner</h5>
        <a asp-action="AddFoodLog" asp-controller="FoodLog" asp-route-meal="Dinner">Add Food</a>
    </div>
    <div>
        <h5>Snacks</h5>
        <a asp-action="AddFoodLog" asp-controller="FoodLog" asp-route-meal="Snacks">Add Food</a>
    </div>
}







